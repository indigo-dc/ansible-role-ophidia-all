---
- name: Install epel-elease
  yum: name=epel-release state=latest update_cache=yes

- name: Install mysql-community-release
  yum: name=http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm state=present

- name: get the indigo repository conf
  get_url: url={{ item.url }} dest={{ item.dest }}
  with_items:
    - { url: 'http://repo.indigo-datacloud.eu/repos/1/indigo1-testing-base.repo', dest: '/etc/yum.repos.d/indigo1-testing-base.repo' }
    - { url: 'http://repo.indigo-datacloud.eu/repos/1/indigo1-testing-third-party.repo', dest: '/etc/yum.repos.d/indigo1-testing-third-party.repo' }
    - { url: 'http://repo.indigo-datacloud.eu/repos/1/indigo1-testing-updates.repo', dest: '/etc/yum.repos.d/indigo1-testing-updates.repo' }

- name: Install necessary packages
  yum: name={{ item }} state=latest update_cache=yes
  with_items:
    - git
    - gcc-c++
    - curl
    - flex-devel
    - compat-guile18
    - compat-guile18-devel
    - guile-devel
    - graphviz-devel
    - gsoap
    - gsoap-devel
    - gsl-devel
    - gsl
    - gtk2
    - gtk2-devel
    - hdf5-mpich
    - hdf5-mpich-devel
    - jansson
    - jansson-devel
    - libcurl-devel
    - libssh2-devel
    - libtool-ltdl
    - libtool-ltdl-devel
    - libxml2
    - libxml2-devel
    - mpich
    - mpich-devel
    - mysql-community-devel
    - MySQL-python
    - netcdf-mpich.x86_64
    - netcdf-mpich-devel
    - openssl
    - openssl-devel
    - ophidia-analytics-framework
    - ophidia-primitives
    - ophidia-server
    - ophidia-terminal
    - policycoreutils-python
    - readline
    - readline-devel
    - sudo
    - wget
    - indent
    - lcov
    - python-pip
    - httpd
    - php
    - mysql-community-server
    - munge
    - munge-devel
    - munge-libs

- name: install slurm and ophidia rpms (TEMPORARY from non repo url)
  yum: name={{ item }} state=present validate_certs=no
  with_items:
    - '{{ slurm_rpms }}slurm-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-munge-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-openlava-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-pam_slurm-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-perlapi-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-plugins-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-seff-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-sjobexit-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-sjstat-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-slurmdb-direct-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-slurmdbd-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-sql-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}slurm-torque-16.05.2-1.el7.centos.x86_64.rpm'
    - '{{ slurm_rpms }}libmatheval-1.1.11-5.el7.centos.x86_64.rpm'

#    - '{{ oph_rpms }}ophidia-analytics-framework-0.10.2-0.el7.centos.x86_64.rpm'
#    - '{{ oph_rpms }}ophidia-primitives-0.10.2-0.el7.centos.x86_64.rpm'
#    - '{{ oph_rpms }}ophidia-server-0.10.2-0.el7.centos.x86_64.rpm'
#    - '{{ oph_rpms }}ophidia-terminal-0.10.2-0.el7.centos.x86_64.rpm'

- name: Create user for Ophidia framwork
  user: name={{ oph_user }} shell=/bin/bash generate_ssh_key=yes ssh_key_bits=2048

# Comment the get and unarchive of these tarballs since we now install rpms
# keep this task until proven that the rpms are doing their work on ophidia
#- name: Unarchive
#  unarchive: src={{ item }} dest=/usr/local owner=root group=root copy=no
#  with_items:
#    - http://ftp.gnu.org/gnu/libmatheval/libmatheval-1.1.11.tar.gz
#    - http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.17.tar.gz
#    - ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.0.tar.gz
#    - http://www.lip.pt/~david/gsoap_2.8.27.tgz

- name: Copy template of ophidia server server.conf
  template:
    src=server.conf.j2
    dest=/usr/local/ophidia/oph-server/etc/server.conf
    mode=0644
    owner=root
    group=root

- name: Copy template of .my.cfn to ophi_user
  template:
    src=.my.cfn.j2
    dest=/home/{{ oph_user }}/.my.cfn
    mode=0600
    owner={{ oph_user }}
    group={{ oph_user }}

- name: Copy template of .my.cfn to root
  template:
    src=.my.cfn.j2
    dest=/root/.my.cfn
    mode=0600
    owner=root
    group=root

- name: Start mysql service
  service: name=mysql state=started enabled=yes

- name: set the mysql root user passwd
  mysql_user: name=root password={{ cert_passwd }}

- name: create ophidia databases
  mysql_db: name={{ item }} state=present
  with_items:
    - ophidiadb
    - oph_dimensions

- name: import ophidia analytics db
  mysql_db: name=ophidiadb state=import target=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/ophidiadb.sql

- name: Make munge private key
  shell: dd if=/dev/urandom bs=1 count=1024 > /etc/munge/munge.key

- name: Change ownership of /etc/munge/munge.key
  command: sudo chown munge:munge /etc/munge/munge.key

- name: Set permissions on /etc/munge/munge.key
  command: chmod 400 /etc/munge/munge.key

- name: Creating root SSL cert
  command: >
    openssl req
      -newkey rsa:1024
      -passout pass:{{ cert_passwd }}
      -subj "/"
      -sha1
      -keyout rootkey.pem
      -out rootreq.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Sign root SSL cert
  command: >
    openssl x509
      -req
      -in rootreq.pem
      -passin pass:{{ cert_passwd }}
      -sha1
      -extensions v3_ca
      -signkey rootkey.pem
      -out rootcert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: merge cert and key of root cert
  shell: cat rootcert.pem rootkey.pem > cacert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/
    executable: /bin/bash

- name: Creating server SSL cert
  command: >
    openssl req
      -newkey rsa:1024
      -passout pass:{{ cert_passwd }}
      -subj "/"
      -sha1
      -keyout serverkey.pem
      -out serverreq.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Sign server SSL cert
  command: >
    openssl x509
      -req
      -in serverreq.pem
      -passin pass:{{ cert_passwd }}
      -sha1
      -extensions usr_cert
      -CA cacert.pem
      -CAkey cacert.pem
      -CAcreateserial
      -out servercert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: merge cert and key of server cert
  shell: cat servercert.pem serverkey.pem rootcert.pem > myserver.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/
    executable: /bin/bash

- name: Remove intermediate certs
  file: path={{ item }} state=absent
  with_items:
    - /usr/local/ophidia/oph-server/etc/cert/rootcert.pem
    - /usr/local/ophidia/oph-server/etc/cert/rootkey.pem
    - /usr/local/ophidia/oph-server/etc/cert/rootreq.pem
    - /usr/local/ophidia/oph-server/etc/cert/servercert.pem
    - /usr/local/ophidia/oph-server/etc/cert/serverkey.pem
    - /usr/local/ophidia/oph-server/etc/cert/serverreq.pem
    - /usr/local/ophidia/oph-server/etc/cert/cacert.srl
